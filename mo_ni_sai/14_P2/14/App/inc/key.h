#ifndef __KEY_H
#define __KEY_H

#include "main.h"

//控制按键B4初始化 1-初始化 0-不初始化
#define KEYPA 1

//控制按键B1-B3初始化 1-初始化 0-不初始化
#define KEYPB 1
//设置需要初始化的GPIO的引脚
#define KEYGPIOB GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2

/*****************************************************
 * 函数功能：按键的初始化函数
 * 函数参数：无
 * 函数返回值：无
******************************************************/
void keyInit(void);

/*****************************************************
 * 函数功能：按键扫描 含按键消抖 无长按短按设计
 * 函数参数：无
 * 函数返回值：按键的位置
 *            返回值说明：B1-1 B2-2 B3-3 B4-4
******************************************************/
unsigned char scanKey(void);

/******************************************************
 * 函数功能：按键扫描 用于按键的{长按-短按} {按下-松开}设计
 * 函数参数：无
 * 函数返回值：无
*******************************************************/
unsigned char scanKeyNoTime(void);

/******************************************************
 * 函数功能：按键扫描 用于{单击-双击}按键
 * 函数参数：无
 * 函数返回值：按键的键值
******************************************************/
unsigned char doubleScankey(void);


// 按键结果结构体 需要注意的是任意俩者不能够同时为1
struct keys{
	//按键单次按下  0-无效   1-按键按下
	int flag;
	//双击按键的标志 0-无效  1-双次按下
	int doubleFlag;
	//长按按键的标志 0-无效   1-长按
	int longFlag;
};

//按键状态判断的结构体
struct keyState{
	//记录按键状态机的状态
	unsigned char judgeSate;
	//记录按键的状态
	unsigned char keyState;
	//记录按键是否双击 双击就会计时
	unsigned char doubleClickTimerFlag;
	//记录按键按下的时间
	int keyTime;
	//记录按键双击的时间
	unsigned char doubleClickTime;
};

//定义一个按键变量 key[0]=B1 key[1]=B2 key[2]=B3 key[3]=B4 
extern struct keys key[];

/***************************************************************************************************
 * 函数功能：按键扫描函数 注意此函数放在定时器中断（10ms）中的使用效果最佳 否则双击与长按会出现问题
 * 函数参数：无
 * 函数返回值：无
****************************************************************************************************/
void scanKeyUseStructAndTime(void);


#endif
